/******************************************************************************************************************************************************************************************************\
 *** 
 *** Simulink model       : mota
 *** TargetLink subsystem : mota/MOTA
 *** Codefile             : MOTA.h
 ***
 *** Generated by TargetLink, the dSPACE production quality code generator
 *** Generation date: 2016-07-18 17:52:29
 ***
 *** CODE GENERATOR OPTIONS:
 *** Code generation mode                     : Standard
 *** Compiler                                 : <unknown>
 *** Target                                   : Generic
 *** ANSI-C compatible code                   : yes
 *** Code Optimization                        : enabled
 *** Constant style                           : decimal
 *** Clean code option                        : enabled
 *** Logging mode                             : Do not log anything
 *** Code Coverage                            : disabled
 *** Generate empty conditional branches      : disabled
 *** Loop unroll threshold                    : 5
 *** Variable vector widths                   : enabled
 *** Shift mode                               : automatic
 *** Handle unscaled SF expr. with TL type    : enabled
 *** Assignment of conditions                 : AllBooleanOutputs 
 *** Scope reduction only to function level   : disabled
 *** Exploit ranges if not erasable           : disabled
 *** Exploit Compute Through Overflow         : optimized
 *** Linker sections                          : enabled
 *** Enable Assembler                         : disabled
 *** Variable name length                     : 31 chars
 *** Use global bitfields                     : disabled
 *** Stateflow: use of bitfields              : disabled
 *** State activity encoding limit            : 5
 *** Omit zero inits in restart function      : disabled
 *** Share functions between TL subsystems    : disabled
 *** Generate 64bit functions                 : enabled
 *** Inlining Threshold                       : 6
 *** Line break limit                         : 200
 *** Target optimized boolean data type       : enabled
 *** Keep saturation elements                 : disabled
 *** Extended variable sharing                : disabled
 *** Extended lifetime optimization           : enabled
 *** Style definition file                    : C:\Program Files\dSPACE TargetLink 4.0\Matlab\Tl\Config\codegen\cconfig.xml
 *** Root style sheet                         : C:\Program Files\dSPACE TargetLink 4.0\Matlab\Tl\XML\CodeGen\Stylesheets\TL_CSourceCodeSS.xsl
 ***
 *** TargetLink version      : 4.0 from 30-Oct-2014
 *** Code generator version  : Build Id 4.0.0.23 from 2014-10-21 15:54:50
 *** Copyright (c) 2014 dSPACE GmbH
\******************************************************************************************************************************************************************************************************/

#ifndef MOTA_H
#define MOTA_H

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  DEFINES (OPT)
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  INCLUDES
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
#include "tl_define.h"
#include "tl_basetypes.h"
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  DEFINES
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  TYPEDEFS
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/

struct BS_IP_Sa1_MOTA_Input_Backrest {
   Int16 Hall_Backrest;
   UInt8 Backrest_Presence;
   UInt8 In_BackrestDown;
   UInt8 In_BackrestUp;
   UInt8 StatusMotor_Backrest;
}; /* bus inport struct */
struct BS_IP_Sa1_MOTA_Input_Common {
   Int16 PillarPosition;
   Int16 Welcome_Distance;
   UInt8 Actual_Pos_Loss;
   UInt8 Antipanic;
   UInt8 Antipinch_Active;
   UInt8 DoorStatus;
   UInt8 EasyExit_Enable;
   UInt8 Init_From_Diag;
   UInt8 KeyStatus;
   UInt8 MCU_PositionRecall;
   UInt8 Movement_Enable;
   UInt8 RemoteCranking;
}; /* bus inport struct */
struct BS_IP_Sa1_MOTA_Input_Lift {
   Int16 Hall_Lift;
   UInt8 In_LiftDown;
   UInt8 In_LiftUp;
   UInt8 Lift_Presence;
   UInt8 StatusMotor_Lift;
}; /* bus inport struct */
struct BS_IP_Sa1_MOTA_Input_Slide {
   Int16 Hall_Slide;
   Int16 Slide_Tolerance;
   UInt8 In_SlideDown;
   UInt8 In_SlideUp;
   UInt8 Slide_Presence;
   UInt8 StatusMotor_Slide;
}; /* bus inport struct */
struct BS_IP_Sa1_MOTA_Input_Tilt {
   Int16 Hall_Tilt;
   UInt8 In_TiltDown;
   UInt8 In_TiltUp;
   UInt8 StatusMotor_Tilt;
   UInt8 Tilt_Presence;
}; /* bus inport struct */
struct BS_OP_Sa1_MOTA_Output {
   UInt8 Actual_Pos_Loss_Rec;
   UInt8 AutomaticMov;
   UInt8 Check_Antipinch;
   UInt8 CmdMotor_Backrest;
   UInt8 CmdMotor_Lift;
   UInt8 CmdMotor_Slide;
   UInt8 CmdMotor_Tilt;
   UInt8 Mem_Recall_Sts;
   UInt8 Set_Hall_Slide;
   UInt8 Write_Map;
}; /* bus outport struct */
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  ENUMS
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  VARIABLES
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*********************************************************************************************************************************************************\
   EXTERN_GLOBAL: external global variables (RAM) | Width: 16
\*********************************************************************************************************************************************************/
EXTERN_GLOBAL Int16 EERAM_Measured_Motors_Stroke /* LSB: 2^0 OFF:  0 MIN/MAX:  -32768 .. 32767 */;
EXTERN_GLOBAL Int16 EERAM_MemoDrivePos /* LSB: 2^0 OFF:  0 MIN/MAX:  -32768 .. 32767 */;
EXTERN_GLOBAL Int16 EERAM_MemoM[12];
EXTERN_GLOBAL Int16 EERAM_Nominal_Motors_Stroke /* LSB: 2^0 OFF:  0 MIN/MAX:  -32768 .. 32767 */;

/*********************************************************************************************************************************************************\
   EXTERN_GLOBAL: external global variables (RAM) | Width: 8
\*********************************************************************************************************************************************************/
EXTERN_GLOBAL UInt8 EEG_Status /* LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 255 */;
EXTERN_GLOBAL UInt8 Init_Motor_Slide /* LSB: 2^0 OFF:  0 MIN/MAX:  0 .. 255 */;

/*********************************************************************************************************************************************************\
   SLGlobal: Default storage class for global variables | Width: N.A.
\*********************************************************************************************************************************************************/
extern struct BS_IP_Sa1_MOTA_Input_Backrest MOTA_Input_Backrest;

extern struct BS_IP_Sa1_MOTA_Input_Common MOTA_Input_Common;

extern struct BS_IP_Sa1_MOTA_Input_Lift MOTA_Input_Lift;

extern struct BS_IP_Sa1_MOTA_Input_Slide MOTA_Input_Slide;

extern struct BS_IP_Sa1_MOTA_Input_Tilt MOTA_Input_Tilt;

extern struct BS_OP_Sa1_MOTA_Output MOTA_Output;

/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  PARAMETERIZED MACROS
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  FUNCTION PROTOTYPES
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
/*********************************************************************************************************************************************************\
   GlobalStep: Default function class for not static model step functions
\*********************************************************************************************************************************************************/
extern void MOTA(void);


#endif /* MOTA_H */
/*-------------------------------------------------------------------------------------------------------------------------------------------------------*\
  END OF FILE
\*-------------------------------------------------------------------------------------------------------------------------------------------------------*/
